# Vinicius Ribeiro
# 82773

#1
MATCH (:Person)-[:ACTED_IN]->(movie)<-[:DIRECTED]-(director)
RETURN movie.title, director.name

#2
MATCH (actor:Person)-[:ACTED_IN]->(movie) WHERE movie.released > 2005
RETURN movie, actor

#3
MATCH (nodeOne)-[relation]-(nodeTwo)
WITH distinct nodeOne,nodeTwo, count(relation) as rCount
MATCH (nodeOne)-[relation]-(nodeTwo)
where rCount > 1
return nodeOne,relation,nodeTwo

#4
MATCH p1=()-[r:REVIEWED]->(m)<-[r2:REVIEWED]-(p2) 
RETURN p1,m,p2

#5
MATCH (actor1)-[r1:ACTED_IN]->(m:Movie)<-[r2:ACTED_IN]-(actor2)
RETURN actor1.name, m.title, actor2.name

#6
MATCH (p:Person)-[r:ACTED_IN]->(movie)
WHERE movie.title="Apollo 13"
RETURN p, (movie.released-p.born) AS actor_age

#7
MATCH (p:Person)-[r:ACTED_IN]->(m:Movie)
WITH (m.released-p.born) as age
WITH m.title, collect(avg(age)) as ageAvg
ORDER BY ageAvg DESC
UNWIND ageAvg[0..10] as topTen
RETURN topTen

#8

#9
MATCH path = shortestPath((p1:Person{name:'John Cusack'})-[*]-(p2:Person{name:'Demi Moore'}))
RETURN path

#10
MATCH path = shortestPath((p1:Person{name:'Keanu Reeves'})-[*]-(p2:Person{name:'Tom Cruise'}))
RETURN length(path)

#11
MATCH path = shortestPath((p1:Person)-[*]-(p2:Person))
WHERE p1.name CONTAINS 'Jim' AND p2.name CONTAINS 'Kevin'
RETURN length(path), path

#12
MATCH (p1:Person)-[*2]-(p2:Person{name:'Jim Cash'})
RETURN p1

#13
MATCH path = shortestPath((p1:Person)-[*]-(p2:Person))
WHERE p1.name = "Kevin Bacon" AND p2.name <> "Kevin Bacon"
RETURN length(path) AS length
ORDER BY length DESC
LIMIT 1

#14
MATCH path = shortestPath((p1:Person)-[*]-(p2:Person))
WHERE p1.name <> p2.name
RETURN length(path) AS length
ORDER BY length DESC
LIMIT 1

#15
MATCH p=shortestPath((p1:Person)-[*]-(p2:Person))
WHERE p1.name <> p2.name
RETURN length(p) AS length, COUNT(length(p))
ORDER BY length ASC

#16
MATCH (p1:Person)-[r1:ACTED_IN]->(m:Movie)<-[r2:ACTED_IN]-(p2:Person), p=shortestPath((p1)-[*]-(p2))
WHERE p1.name <> p2.name
RETURN p1.name, AVG(length(p)) AS media
ORDER BY media ASC
LIMIT 10


